{"version":3,"file":"src_main_webapp_app_login_login_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/login/login.component.ts","./src/main/webapp/app/login/login.component.html","./src/main/webapp/app/login/login.module.ts","./src/main/webapp/app/login/login.route.ts"],"sourcesContent":["import { Component, ViewChild, OnInit, AfterViewInit, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from 'app/login/login.service';\nimport { AccountService } from 'app/core/auth/account.service';\n\n@Component({\n  selector: 'jhi-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n  @ViewChild('username', { static: false })\n  username!: ElementRef;\n\n  authenticationError = false;\n\n  loginForm = new FormGroup({\n    username: new FormControl('', { nonNullable: true, validators: [Validators.required] }),\n    password: new FormControl('', { nonNullable: true, validators: [Validators.required] }),\n    rememberMe: new FormControl(false, { nonNullable: true, validators: [Validators.required] }),\n  });\n\n  constructor(private accountService: AccountService, private loginService: LoginService, private router: Router) {}\n\n  ngOnInit(): void {\n    // if already authenticated then navigate to home page\n    this.accountService.identity().subscribe(() => {\n      if (this.accountService.isAuthenticated()) {\n        this.router.navigate(['']);\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.username.nativeElement.focus();\n  }\n\n  login(): void {\n    this.loginService.login(this.loginForm.getRawValue()).subscribe({\n      next: () => {\n        this.authenticationError = false;\n        if (!this.router.getCurrentNavigation()) {\n          // There were no routing during login (eg from navigationToStoredUrl)\n          this.router.navigate(['']);\n        }\n      },\n      error: () => (this.authenticationError = true),\n    });\n  }\n}\n","<div>\n  <div class=\"d-flex justify-content-center\">\n    <div class=\"col-lg-6 col-md-8 col-sm-10\">\n      <h1 jhiTranslate=\"login.title\" data-cy=\"loginTitle\">Authentification</h1>\n      <div class=\"alert alert-danger\" *ngIf=\"authenticationError\" jhiTranslate=\"login.messages.error.authentication\" data-cy=\"loginError\">\n        <strong>Erreur d'authentification !</strong> Veuillez vérifier vos identifiants de connexion.\n      </div>\n      <form class=\"form\" role=\"form\" (ngSubmit)=\"login()\" [formGroup]=\"loginForm\">\n        <div class=\"mb-3\">\n          <label class=\"username-label\" for=\"username\" jhiTranslate=\"global.form.username.label\">Nom d'utilisateur</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"username\"\n            id=\"username\"\n            placeholder=\"{{ 'global.form.username.placeholder' | translate }}\"\n            formControlName=\"username\"\n            #username\n            data-cy=\"username\"\n          />\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"password\" jhiTranslate=\"login.form.password\">Mot de passe</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"{{ 'login.form.password.placeholder' | translate }}\"\n            formControlName=\"password\"\n            data-cy=\"password\"\n          />\n        </div>\n\n        <div class=\"form-check\">\n          <label class=\"form-check-label\" for=\"rememberMe\">\n            <input class=\"form-check-input\" type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" formControlName=\"rememberMe\" />\n            <span jhiTranslate=\"login.form.rememberme\">Garder la session ouverte</span>\n          </label>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\" jhiTranslate=\"login.form.button\" data-cy=\"submit\">Connexion</button>\n      </form>\n      <div class=\"mt-3 alert alert-warning\">\n        <a class=\"alert-link\" routerLink=\"/account/reset/request\" jhiTranslate=\"login.password.forgot\" data-cy=\"forgetYourPasswordSelector\"\n          >Avez-vous oublié votre mot de passe ?</a\n        >\n      </div>\n\n      <div class=\"alert alert-warning\">\n        <span jhiTranslate=\"global.messages.info.register.noaccount\">Vous n'avez pas encore de compte ?</span>\n        <a class=\"alert-link\" routerLink=\"/account/register\" jhiTranslate=\"global.messages.info.register.link\">Créer un compte</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SharedModule } from 'app/shared/shared.module';\nimport { LOGIN_ROUTE } from './login.route';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild([LOGIN_ROUTE])],\n  declarations: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Route } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nexport const LOGIN_ROUTE: Route = {\n  path: '',\n  component: LoginComponent,\n  data: {\n    pageTitle: 'login.title',\n  },\n};\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}