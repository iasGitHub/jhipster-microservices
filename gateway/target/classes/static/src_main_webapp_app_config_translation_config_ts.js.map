{"version":3,"file":"src_main_webapp_app_config_translation_config_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAEiE;AAE1D,MAAM,0BAA0B,GAAG,uBAAuB,CAAC;AAE3D,MAAM,6BAA6B;IACxC,MAAM,CAAC,MAAuC;QAC5C,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACvB,OAAO,GAAG,0BAA0B,IAAI,GAAG,GAAG,CAAC;IACjD,CAAC;CACF;AAEM,SAAS,sBAAsB,CAAC,IAAgB;IACrD,OAAO,IAAI,2EAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,kCAAS,EAAE,CAAC,CAAC;AACxE,CAAC;AAEM,SAAS,yBAAyB;IACvC,OAAO,IAAI,6BAA6B,EAAE,CAAC;AAC7C,CAAC","sources":["./src/main/webapp/app/config/translation.config.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { MissingTranslationHandler, MissingTranslationHandlerParams, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nexport const translationNotFoundMessage = 'translation-not-found';\n\nexport class MissingTranslationHandlerImpl implements MissingTranslationHandler {\n  handle(params: MissingTranslationHandlerParams): string {\n    const key = params.key;\n    return `${translationNotFoundMessage}[${key}]`;\n  }\n}\n\nexport function translatePartialLoader(http: HttpClient): TranslateLoader {\n  return new TranslateHttpLoader(http, 'i18n/', `.json?_=${I18N_HASH}`);\n}\n\nexport function missingTranslationHandler(): MissingTranslationHandler {\n  return new MissingTranslationHandlerImpl();\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}