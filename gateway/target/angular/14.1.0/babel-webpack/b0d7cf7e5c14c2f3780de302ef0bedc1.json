{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./password.service\";\nimport * as i2 from \"app/core/auth/account.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../shared/language/translate.directive\";\nimport * as i6 from \"./password-strength-bar/password-strength-bar.component\";\nimport * as i7 from \"@ngx-translate/core\";\n\nfunction PasswordComponent_div_4_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"Le mot de passe a \\u00E9t\\u00E9 modifi\\u00E9 !\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"Une erreur est survenue !\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" Le mot de passe n'a pas pu \\u00EAtre modifi\\u00E9.\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \"\\n        Le nouveau mot de passe et sa confirmation ne sont pas \\u00E9gaux !\\n      \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_24_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"\\n              Votre mot de passe est requis.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_24_small_2_Template, 2, 0, \"small\", 21);\n    i0.ɵɵtext(3, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.passwordForm.get(\"currentPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\n\nfunction PasswordComponent_div_4_div_35_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 22);\n    i0.ɵɵtext(1, \"\\n              Votre mot de passe est requis.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_35_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"\\n              Votre mot de passe doit comporter au moins 4 caract\\u00E8res.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_35_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 26);\n    i0.ɵɵtext(1, \"\\n              Votre mot de passe ne doit pas comporter plus de 50 caract\\u00E8res.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_35_small_2_Template, 2, 0, \"small\", 21);\n    i0.ɵɵtext(3, \"\\n\\n            \");\n    i0.ɵɵtemplate(4, PasswordComponent_div_4_div_35_small_4_Template, 2, 0, \"small\", 23);\n    i0.ɵɵtext(5, \"\\n\\n            \");\n    i0.ɵɵtemplate(6, PasswordComponent_div_4_div_35_small_6_Template, 2, 0, \"small\", 24);\n    i0.ɵɵtext(7, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r6.passwordForm.get(\"newPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength);\n  }\n}\n\nfunction PasswordComponent_div_4_div_48_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 30);\n    i0.ɵɵtext(1, \"\\n              Votre confirmation du mot de passe est requise.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_48_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 31);\n    i0.ɵɵtext(1, \"\\n              Votre confirmation du mot de passe doit comporter au moins 4 caract\\u00E8res.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_48_small_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 32);\n    i0.ɵɵtext(1, \"\\n              Votre confirmation du mot de passe ne doit pas comporter plus de 50 caract\\u00E8res.\\n            \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PasswordComponent_div_4_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n            \");\n    i0.ɵɵtemplate(2, PasswordComponent_div_4_div_48_small_2_Template, 2, 0, \"small\", 27);\n    i0.ɵɵtext(3, \"\\n\\n            \");\n    i0.ɵɵtemplate(4, PasswordComponent_div_4_div_48_small_4_Template, 2, 0, \"small\", 28);\n    i0.ɵɵtext(5, \"\\n\\n            \");\n    i0.ɵɵtemplate(6, PasswordComponent_div_4_div_48_small_6_Template, 2, 0, \"small\", 29);\n    i0.ɵɵtext(7, \"\\n          \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r7.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r7.passwordForm.get(\"confirmPassword\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.maxlength);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    username: a0\n  };\n};\n\nfunction PasswordComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtext(1, \"\\n      \");\n    i0.ɵɵelementStart(2, \"h2\", 3);\n    i0.ɵɵtext(3, \"\\n        Changer le mot de passe pour [\");\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"]\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \"\\n\\n      \");\n    i0.ɵɵtemplate(8, PasswordComponent_div_4_div_8_Template, 5, 0, \"div\", 4);\n    i0.ɵɵtext(9, \"\\n\\n      \");\n    i0.ɵɵtemplate(10, PasswordComponent_div_4_div_10_Template, 5, 0, \"div\", 5);\n    i0.ɵɵtext(11, \"\\n\\n      \");\n    i0.ɵɵtemplate(12, PasswordComponent_div_4_div_12_Template, 2, 0, \"div\", 6);\n    i0.ɵɵtext(13, \"\\n\\n      \");\n    i0.ɵɵelementStart(14, \"form\", 7);\n    i0.ɵɵlistener(\"ngSubmit\", function PasswordComponent_div_4_Template_form_ngSubmit_14_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.changePassword());\n    });\n    i0.ɵɵtext(15, \"\\n        \");\n    i0.ɵɵelementStart(16, \"div\", 8);\n    i0.ɵɵtext(17, \"\\n          \");\n    i0.ɵɵelementStart(18, \"label\", 9);\n    i0.ɵɵtext(19, \"Mot de passe actuel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"\\n          \");\n    i0.ɵɵelement(21, \"input\", 10);\n    i0.ɵɵpipe(22, \"translate\");\n    i0.ɵɵtext(23, \"\\n\\n          \");\n    i0.ɵɵtemplate(24, PasswordComponent_div_4_div_24_Template, 4, 1, \"div\", 11);\n    i0.ɵɵtext(25, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \"\\n\\n        \");\n    i0.ɵɵelementStart(27, \"div\", 8);\n    i0.ɵɵtext(28, \"\\n          \");\n    i0.ɵɵelementStart(29, \"label\", 12);\n    i0.ɵɵtext(30, \"Nouveau mot de passe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(31, \"\\n          \");\n    i0.ɵɵelement(32, \"input\", 13);\n    i0.ɵɵpipe(33, \"translate\");\n    i0.ɵɵtext(34, \"\\n\\n          \");\n    i0.ɵɵtemplate(35, PasswordComponent_div_4_div_35_Template, 8, 3, \"div\", 11);\n    i0.ɵɵtext(36, \"\\n\\n          \");\n    i0.ɵɵelement(37, \"jhi-password-strength-bar\", 14);\n    i0.ɵɵtext(38, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(39, \"\\n\\n        \");\n    i0.ɵɵelementStart(40, \"div\", 8);\n    i0.ɵɵtext(41, \"\\n          \");\n    i0.ɵɵelementStart(42, \"label\", 15);\n    i0.ɵɵtext(43, \"Confirmation du nouveau mot de passe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(44, \"\\n          \");\n    i0.ɵɵelement(45, \"input\", 16);\n    i0.ɵɵpipe(46, \"translate\");\n    i0.ɵɵtext(47, \"\\n\\n          \");\n    i0.ɵɵtemplate(48, PasswordComponent_div_4_div_48_Template, 8, 3, \"div\", 11);\n    i0.ɵɵtext(49, \"\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(50, \"\\n\\n        \");\n    i0.ɵɵelementStart(51, \"button\", 17);\n    i0.ɵɵtext(52, \"\\n          Sauvegarder\\n        \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(53, \"\\n      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(54, \"\\n    \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const account_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"translateValues\", i0.ɵɵpureFunction1(20, _c0, account_r1.login));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(account_r1.login);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.success);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.error);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.doNotMatch);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.passwordForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(22, 14, \"global.form.currentpassword.placeholder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"currentPassword\").invalid && (ctx_r0.passwordForm.get(\"currentPassword\").dirty || ctx_r0.passwordForm.get(\"currentPassword\").touched));\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(33, 16, \"global.form.newpassword.placeholder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"newPassword\").invalid && (ctx_r0.passwordForm.get(\"newPassword\").dirty || ctx_r0.passwordForm.get(\"newPassword\").touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"passwordToCheck\", ctx_r0.passwordForm.get(\"newPassword\").value);\n    i0.ɵɵadvance(8);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(46, 18, \"global.form.confirmpassword.placeholder\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordForm.get(\"confirmPassword\").invalid && (ctx_r0.passwordForm.get(\"confirmPassword\").dirty || ctx_r0.passwordForm.get(\"confirmPassword\").touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.passwordForm.invalid);\n  }\n}\n\nexport class PasswordComponent {\n  constructor(passwordService, accountService) {\n    this.passwordService = passwordService;\n    this.accountService = accountService;\n    this.doNotMatch = false;\n    this.error = false;\n    this.success = false;\n    this.passwordForm = new FormGroup({\n      currentPassword: new FormControl('', {\n        nonNullable: true,\n        validators: Validators.required\n      }),\n      newPassword: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(4), Validators.maxLength(50)]\n      }),\n      confirmPassword: new FormControl('', {\n        nonNullable: true,\n        validators: [Validators.required, Validators.minLength(4), Validators.maxLength(50)]\n      })\n    });\n  }\n\n  ngOnInit() {\n    this.account$ = this.accountService.identity();\n  }\n\n  changePassword() {\n    this.error = false;\n    this.success = false;\n    this.doNotMatch = false;\n    const {\n      newPassword,\n      confirmPassword,\n      currentPassword\n    } = this.passwordForm.getRawValue();\n\n    if (newPassword !== confirmPassword) {\n      this.doNotMatch = true;\n    } else {\n      this.passwordService.save(newPassword, currentPassword).subscribe({\n        next: () => this.success = true,\n        error: () => this.error = true\n      });\n    }\n  }\n\n}\n\nPasswordComponent.ɵfac = function PasswordComponent_Factory(t) {\n  return new (t || PasswordComponent)(i0.ɵɵdirectiveInject(i1.PasswordService), i0.ɵɵdirectiveInject(i2.AccountService));\n};\n\nPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PasswordComponent,\n  selectors: [[\"jhi-password\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[1, \"d-flex\", \"justify-content-center\"], [\"class\", \"col-md-8\", 4, \"ngIf\"], [1, \"col-md-8\"], [\"jhiTranslate\", \"password.title\", 3, \"translateValues\"], [\"class\", \"alert alert-success\", \"jhiTranslate\", \"password.messages.success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"jhiTranslate\", \"password.messages.error\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", \"jhiTranslate\", \"global.messages.error.dontmatch\", 4, \"ngIf\"], [\"name\", \"form\", \"role\", \"form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"currentPassword\", \"jhiTranslate\", \"global.form.currentpassword.label\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"currentPassword\", \"name\", \"currentPassword\", \"formControlName\", \"currentPassword\", \"data-cy\", \"currentPassword\", 1, \"form-control\", 3, \"placeholder\"], [4, \"ngIf\"], [\"for\", \"newPassword\", \"jhiTranslate\", \"global.form.newpassword.label\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"newPassword\", \"name\", \"newPassword\", \"formControlName\", \"newPassword\", \"data-cy\", \"newPassword\", 1, \"form-control\", 3, \"placeholder\"], [3, \"passwordToCheck\"], [\"for\", \"confirmPassword\", \"jhiTranslate\", \"global.form.confirmpassword.label\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"data-cy\", \"confirmPassword\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"submit\", \"jhiTranslate\", \"password.form.button\", \"data-cy\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"jhiTranslate\", \"password.messages.success\", 1, \"alert\", \"alert-success\"], [\"jhiTranslate\", \"password.messages.error\", 1, \"alert\", \"alert-danger\"], [\"jhiTranslate\", \"global.messages.error.dontmatch\", 1, \"alert\", \"alert-danger\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"global.messages.validate.newpassword.required\", 4, \"ngIf\"], [\"jhiTranslate\", \"global.messages.validate.newpassword.required\", 1, \"form-text\", \"text-danger\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"global.messages.validate.newpassword.minlength\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"global.messages.validate.newpassword.maxlength\", 4, \"ngIf\"], [\"jhiTranslate\", \"global.messages.validate.newpassword.minlength\", 1, \"form-text\", \"text-danger\"], [\"jhiTranslate\", \"global.messages.validate.newpassword.maxlength\", 1, \"form-text\", \"text-danger\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"global.messages.validate.confirmpassword.required\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"global.messages.validate.confirmpassword.minlength\", 4, \"ngIf\"], [\"class\", \"form-text text-danger\", \"jhiTranslate\", \"global.messages.validate.confirmpassword.maxlength\", 4, \"ngIf\"], [\"jhiTranslate\", \"global.messages.validate.confirmpassword.required\", 1, \"form-text\", \"text-danger\"], [\"jhiTranslate\", \"global.messages.validate.confirmpassword.minlength\", 1, \"form-text\", \"text-danger\"], [\"jhiTranslate\", \"global.messages.validate.confirmpassword.maxlength\", 1, \"form-text\", \"text-danger\"]],\n  template: function PasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵtemplate(4, PasswordComponent_div_4_Template, 55, 22, \"div\", 1);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵtext(6, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(8, \"\\n\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 1, ctx.account$));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i4.NgIf, i3.FormGroupDirective, i3.FormControlName, i5.TranslateDirective, i6.PasswordStrengthBarComponent, i4.AsyncPipe, i7.TranslatePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","PasswordComponent","constructor","passwordService","accountService","currentPassword","nonNullable","validators","required","newPassword","minLength","maxLength","confirmPassword","ngOnInit","account$","identity","changePassword","error","success","doNotMatch","passwordForm","getRawValue","save","subscribe","next","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/ias/2SI/GesMicroservice/gateway/src/main/webapp/app/account/password/password.component.ts","/home/ias/2SI/GesMicroservice/gateway/src/main/webapp/app/account/password/password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nimport { AccountService } from 'app/core/auth/account.service';\nimport { Account } from 'app/core/auth/account.model';\nimport { PasswordService } from './password.service';\n\n@Component({\n  selector: 'jhi-password',\n  templateUrl: './password.component.html',\n})\nexport class PasswordComponent implements OnInit {\n  doNotMatch = false;\n  error = false;\n  success = false;\n  account$?: Observable<Account | null>;\n  passwordForm = new FormGroup({\n    currentPassword: new FormControl('', { nonNullable: true, validators: Validators.required }),\n    newPassword: new FormControl('', {\n      nonNullable: true,\n      validators: [Validators.required, Validators.minLength(4), Validators.maxLength(50)],\n    }),\n    confirmPassword: new FormControl('', {\n      nonNullable: true,\n      validators: [Validators.required, Validators.minLength(4), Validators.maxLength(50)],\n    }),\n  });\n\n  constructor(private passwordService: PasswordService, private accountService: AccountService) {}\n\n  ngOnInit(): void {\n    this.account$ = this.accountService.identity();\n  }\n\n  changePassword(): void {\n    this.error = false;\n    this.success = false;\n    this.doNotMatch = false;\n\n    const { newPassword, confirmPassword, currentPassword } = this.passwordForm.getRawValue();\n    if (newPassword !== confirmPassword) {\n      this.doNotMatch = true;\n    } else {\n      this.passwordService.save(newPassword, currentPassword).subscribe({\n        next: () => (this.success = true),\n        error: () => (this.error = true),\n      });\n    }\n  }\n}\n","<div>\n  <div class=\"d-flex justify-content-center\">\n    <div class=\"col-md-8\" *ngIf=\"account$ | async as account\">\n      <h2 jhiTranslate=\"password.title\" [translateValues]=\"{ username: account.login }\">\n        Changer le mot de passe pour [<strong>{{ account.login }}</strong\n        >]\n      </h2>\n\n      <div class=\"alert alert-success\" *ngIf=\"success\" jhiTranslate=\"password.messages.success\">\n        <strong>Le mot de passe a été modifié !</strong>\n      </div>\n\n      <div class=\"alert alert-danger\" *ngIf=\"error\" jhiTranslate=\"password.messages.error\">\n        <strong>Une erreur est survenue !</strong> Le mot de passe n'a pas pu être modifié.\n      </div>\n\n      <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\" jhiTranslate=\"global.messages.error.dontmatch\">\n        Le nouveau mot de passe et sa confirmation ne sont pas égaux !\n      </div>\n\n      <form name=\"form\" role=\"form\" (ngSubmit)=\"changePassword()\" [formGroup]=\"passwordForm\">\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"currentPassword\" jhiTranslate=\"global.form.currentpassword.label\">Mot de passe actuel</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"currentPassword\"\n            name=\"currentPassword\"\n            placeholder=\"{{ 'global.form.currentpassword.placeholder' | translate }}\"\n            formControlName=\"currentPassword\"\n            data-cy=\"currentPassword\"\n          />\n\n          <div\n            *ngIf=\"\n              passwordForm.get('currentPassword')!.invalid &&\n              (passwordForm.get('currentPassword')!.dirty || passwordForm.get('currentPassword')!.touched)\n            \"\n          >\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"passwordForm.get('currentPassword')?.errors?.required\"\n              jhiTranslate=\"global.messages.validate.newpassword.required\"\n            >\n              Votre mot de passe est requis.\n            </small>\n          </div>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"newPassword\" jhiTranslate=\"global.form.newpassword.label\">Nouveau mot de passe</label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"newPassword\"\n            name=\"newPassword\"\n            placeholder=\"{{ 'global.form.newpassword.placeholder' | translate }}\"\n            formControlName=\"newPassword\"\n            data-cy=\"newPassword\"\n          />\n\n          <div\n            *ngIf=\"\n              passwordForm.get('newPassword')!.invalid &&\n              (passwordForm.get('newPassword')!.dirty || passwordForm.get('newPassword')!.touched)\n            \"\n          >\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"passwordForm.get('newPassword')?.errors?.required\"\n              jhiTranslate=\"global.messages.validate.newpassword.required\"\n            >\n              Votre mot de passe est requis.\n            </small>\n\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"passwordForm.get('newPassword')?.errors?.minlength\"\n              jhiTranslate=\"global.messages.validate.newpassword.minlength\"\n            >\n              Votre mot de passe doit comporter au moins 4 caractères.\n            </small>\n\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"passwordForm.get('newPassword')?.errors?.maxlength\"\n              jhiTranslate=\"global.messages.validate.newpassword.maxlength\"\n            >\n              Votre mot de passe ne doit pas comporter plus de 50 caractères.\n            </small>\n          </div>\n\n          <jhi-password-strength-bar [passwordToCheck]=\"passwordForm.get('newPassword')!.value\"></jhi-password-strength-bar>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"confirmPassword\" jhiTranslate=\"global.form.confirmpassword.label\"\n            >Confirmation du nouveau mot de passe</label\n          >\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            placeholder=\"{{ 'global.form.confirmpassword.placeholder' | translate }}\"\n            formControlName=\"confirmPassword\"\n            data-cy=\"confirmPassword\"\n          />\n\n          <div\n            *ngIf=\"\n              passwordForm.get('confirmPassword')!.invalid &&\n              (passwordForm.get('confirmPassword')!.dirty || passwordForm.get('confirmPassword')!.touched)\n            \"\n          >\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"passwordForm.get('confirmPassword')?.errors?.required\"\n              jhiTranslate=\"global.messages.validate.confirmpassword.required\"\n            >\n              Votre confirmation du mot de passe est requise.\n            </small>\n\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"passwordForm.get('confirmPassword')?.errors?.minlength\"\n              jhiTranslate=\"global.messages.validate.confirmpassword.minlength\"\n            >\n              Votre confirmation du mot de passe doit comporter au moins 4 caractères.\n            </small>\n\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"passwordForm.get('confirmPassword')?.errors?.maxlength\"\n              jhiTranslate=\"global.messages.validate.confirmpassword.maxlength\"\n            >\n              Votre confirmation du mot de passe ne doit pas comporter plus de 50 caractères.\n            </small>\n          </div>\n        </div>\n\n        <button\n          type=\"submit\"\n          [disabled]=\"passwordForm.invalid\"\n          class=\"btn btn-primary\"\n          jhiTranslate=\"password.form.button\"\n          data-cy=\"submit\"\n        >\n          Sauvegarder\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}